import numpy as np
import matplotlib.pyplot as plt
import matplotlib.animation as animation

# Set up the plot
fig, ax = plt.subplots()
ax.set_facecolor('black')
ax.axis('off')
ax.set_xlim(-1.5, 1.5)
ax.set_ylim(-1.5, 1.5)

# Black hole properties
black_hole = plt.Circle((0, 0), 0.1, color='black', ec='white', lw=2)
ax.add_artist(black_hole)

# Planet properties
num_planets = 5
planet_colors = ['cyan', 'yellow', 'orange', 'green', 'magenta']
radii = np.linspace(0.3, 1.3, num_planets)
angles = np.random.uniform(0, 2 * np.pi, num_planets)

planets = []
for i in range(num_planets):
    x = radii[i] * np.cos(angles[i])
    y = radii[i] * np.sin(angles[i])
    planet = plt.Circle((x, y), 0.03, color=planet_colors[i])
    ax.add_artist(planet)
    planets.append(planet)

# Animation function
def update(frame):
    # Clear previous positions and update planet orbits
    for i, planet in enumerate(planets):
        # Gradually spiral planets inward
        radii[i] *= 0.98  # Decrease radius to simulate inward movement
        angles[i] += 0.05  # Rotate the planet
        
        # Update planet positions
        x = radii[i] * np.cos(angles[i])
        y = radii[i] * np.sin(angles[i])
        planet.set_center((x, y))
        
        # If a planet reaches the black hole, make it disappear
        if radii[i] < 0.1:
            planet.set_visible(False)

# Run the animation
ani = animation.FuncAnimation(fig, update, frames=300, interval=50)

plt.show()
